{"ast":null,"code":"// Trying to keep few and reasonably simple dependencies.\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _cssify = require('cssify');\n\nvar _cssify2 = _interopRequireDefault(_cssify);\n\nvar _urlParse = require('url-parse');\n\nvar _urlParse2 = _interopRequireDefault(_urlParse);\n\nvar _Badge = require('./Badge');\n\nvar _Badge2 = _interopRequireDefault(_Badge);\n/* This loads Font Awesome icons from the classic bootstrap CDN, rather than including them in this\n * package. Maybe I'll change my mind, but I'd rather have less distribution duplication and the\n * current implimentations of font-awesome for React through NPM have serious disagreements with\n * browserify and I'm not smart enough to figure out the issue. Bare with me.\n */\n\n\n_cssify2['default'].byUrl('//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css');\n/* Simple icons, or rather, icons which have their hostname agree with my preffered version of \n * their Font Awesome icon name. These are converted to a key:\"key\" object to be merged later.\n */\n\n\nvar simpleIcons = ['facebook', 'github', 'bitbucket', 'deviantart', 'etsy', 'flickr', 'instagram', 'linkedin', 'meetup', 'paypal', 'skype', 'soundcloud', 'spotify', 'slack', 'twitter', 'wordpress', 'tumblr', 'stumbleupon', 'twitch', 'vimeo', 'yelp'].reduce(function (a, b) {\n  a[b] = b;\n  return a;\n}, {});\n/* Merge simple icons with icons who have disagreements between the hostname and Font Awesome icon\n * of my preference.\n */\n\nvar urlToIcon = _extends({}, simpleIcons, {\n  freecodecamp: 'free-code-camp',\n  'plus.google': 'google-plus',\n  pinterest: 'pinterest-p',\n  reddit: 'reddit-alien',\n  snapchat: 'snapchat-ghost',\n  steamcommunity: 'steam',\n  youtube: 'youtube-play',\n  stackexchange: 'stack-exchange'\n});\n\nvar ReactSocialBadge = function ReactSocialBadge(props) {\n  // Collect hostname from provided URL which is a required prop\n  var hostname = new URL(props.url).hostname;\n  /* Determine the icon we need to pick, the first priority is the manually set icon via props\n   * which will override the automatically determined icon via URL parsing. The fallback is a\n   * questionmark icon which will hopefully make it clear that there was no icon by the required\n   * name.\n   */\n\n  var icon = props.icon || urlToIcon[Object.keys(urlToIcon).find(function (x) {\n    return hostname.includes(x);\n  })] || 'question';\n  /* Determine the size of the badge, first check for S/M/L labels, fall back to medium if \n   * no size is specified. If none of these conditions are met, attempt to assign to what is\n   * assumed to be a number of pixels specified by users.\n   */\n\n  var size = function () {\n    var s = props.size;\n\n    switch (s) {\n      case 'small':\n        return 30; // px\n\n        break;\n\n      case undefined:\n      case 'medium':\n        return 45; // px\n\n        break;\n\n      case 'large':\n        return 60; // px\n\n        break;\n\n      default:\n        return Number(s); // px\n\n        break;\n    }\n  }(); // Default width is 60% of container, this is multiplied by specified iconScale\n\n\n  var iconScale = (Number(props.iconScale) || 1.0) * 0.6;\n  /* To deal with expectations I allow for className and badgeClassName to be set.\n   * They are simple combined so that people can specify if they desire.\n   */\n\n  var badgeClassName = (props.className || '') + ' ' + (props.badgeClassName || ''); // Add default styling and merge badgeStyle Prop\n\n  var badgeStyle = _extends({\n    display: 'inline-block',\n    width: size + 'px',\n    height: size + 'px',\n    borderRadius: '50%',\n    margin: '2px',\n    backgroundColor: props.badgeColor || 'rgb(187, 0, 0)'\n  }, props.badgeStyle); // Add default styling and merge iconStyle Prop\n\n\n  var iconStyle = _extends({\n    display: 'inline-block',\n    width: '100%',\n    fontSize: Math.round(size * iconScale) + 'px',\n    color: props.iconColor || 'white',\n    textAlign: 'center',\n    textDecoration: 'none',\n    lineHeight: size + 'px'\n  }, props.iconStyle); // Create the actual badge with a much less smart component\n\n\n  return _react2['default'].createElement(_Badge2['default'], {\n    url: props.url,\n    badgeStyle: badgeStyle,\n    iconStyle: iconStyle,\n    icon: icon,\n    badgeClassName: badgeClassName,\n    iconClassName: props.iconClassName\n  });\n}; // Set PropTypes for component\n\n\nReactSocialBadge.propTypes = {\n  badgeClassName: _react2['default'].PropTypes.string,\n  badgeColor: _react2['default'].PropTypes.string,\n  badgeStyle: _react2['default'].PropTypes.object,\n  className: _react2['default'].PropTypes.object,\n  icon: _react2['default'].PropTypes.string,\n  iconClassName: _react2['default'].PropTypes.string,\n  iconColor: _react2['default'].PropTypes.string,\n  iconScale: _react2['default'].PropTypes.number,\n  iconStyle: _react2['default'].PropTypes.object,\n  size: _react2['default'].PropTypes.string,\n  url: _react2['default'].PropTypes.string.isRequired\n};\nexports['default'] = ReactSocialBadge;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/George/Documents/billy/node_modules/react-social-badge/lib/ReactSocialBadge.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_interopRequireDefault","obj","__esModule","_react","require","_react2","_cssify","_cssify2","_urlParse","_urlParse2","_Badge","_Badge2","byUrl","simpleIcons","reduce","a","b","urlToIcon","freecodecamp","pinterest","reddit","snapchat","steamcommunity","youtube","stackexchange","ReactSocialBadge","props","hostname","URL","url","icon","keys","find","x","includes","size","s","undefined","Number","iconScale","badgeClassName","className","badgeStyle","display","width","height","borderRadius","margin","backgroundColor","badgeColor","iconStyle","fontSize","Math","round","color","iconColor","textAlign","textDecoration","lineHeight","createElement","iconClassName","propTypes","PropTypes","string","object","number","isRequired","module"],"mappings":"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","sourcesContent":["// Trying to keep few and reasonably simple dependencies.\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _cssify = require('cssify');\n\nvar _cssify2 = _interopRequireDefault(_cssify);\n\nvar _urlParse = require('url-parse');\n\nvar _urlParse2 = _interopRequireDefault(_urlParse);\n\nvar _Badge = require('./Badge');\n\nvar _Badge2 = _interopRequireDefault(_Badge);\n\n/* This loads Font Awesome icons from the classic bootstrap CDN, rather than including them in this\n * package. Maybe I'll change my mind, but I'd rather have less distribution duplication and the\n * current implimentations of font-awesome for React through NPM have serious disagreements with\n * browserify and I'm not smart enough to figure out the issue. Bare with me.\n */\n_cssify2['default'].byUrl('//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css');\n\n/* Simple icons, or rather, icons which have their hostname agree with my preffered version of \n * their Font Awesome icon name. These are converted to a key:\"key\" object to be merged later.\n */\nvar simpleIcons = ['facebook', 'github', 'bitbucket', 'deviantart', 'etsy', 'flickr', 'instagram', 'linkedin', 'meetup', 'paypal', 'skype', 'soundcloud', 'spotify', 'slack', 'twitter', 'wordpress', 'tumblr', 'stumbleupon', 'twitch', 'vimeo', 'yelp'].reduce(function (a, b) {\n\ta[b] = b;\n\treturn a;\n}, {});\n\n/* Merge simple icons with icons who have disagreements between the hostname and Font Awesome icon\n * of my preference.\n */\nvar urlToIcon = _extends({}, simpleIcons, {\n\tfreecodecamp: 'free-code-camp',\n\t'plus.google': 'google-plus',\n\tpinterest: 'pinterest-p',\n\treddit: 'reddit-alien',\n\tsnapchat: 'snapchat-ghost',\n\tsteamcommunity: 'steam',\n\tyoutube: 'youtube-play',\n\tstackexchange: 'stack-exchange'\n});\n\nvar ReactSocialBadge = function ReactSocialBadge(props) {\n\t// Collect hostname from provided URL which is a required prop\n\tvar hostname = new URL(props.url).hostname;\n\t/* Determine the icon we need to pick, the first priority is the manually set icon via props\n  * which will override the automatically determined icon via URL parsing. The fallback is a\n  * questionmark icon which will hopefully make it clear that there was no icon by the required\n  * name.\n  */\n\tvar icon = props.icon || urlToIcon[Object.keys(urlToIcon).find(function (x) {\n\t\treturn hostname.includes(x);\n\t})] || 'question';\n\n\t/* Determine the size of the badge, first check for S/M/L labels, fall back to medium if \n  * no size is specified. If none of these conditions are met, attempt to assign to what is\n  * assumed to be a number of pixels specified by users.\n  */\n\tvar size = (function () {\n\t\tvar s = props.size;\n\t\tswitch (s) {\n\t\t\tcase 'small':\n\t\t\t\treturn 30; // px\n\t\t\t\tbreak;\n\t\t\tcase undefined:\n\t\t\tcase 'medium':\n\t\t\t\treturn 45; // px\n\t\t\t\tbreak;\n\t\t\tcase 'large':\n\t\t\t\treturn 60; // px\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn Number(s); // px\n\t\t\t\tbreak;\n\t\t}\n\t})();\n\n\t// Default width is 60% of container, this is multiplied by specified iconScale\n\tvar iconScale = (Number(props.iconScale) || 1.0) * 0.6;\n\n\t/* To deal with expectations I allow for className and badgeClassName to be set.\n  * They are simple combined so that people can specify if they desire.\n  */\n\tvar badgeClassName = (props.className || '') + ' ' + (props.badgeClassName || '');\n\n\t// Add default styling and merge badgeStyle Prop\n\tvar badgeStyle = _extends({\n\t\tdisplay: 'inline-block',\n\t\twidth: size + 'px',\n\t\theight: size + 'px',\n\t\tborderRadius: '50%',\n\t\tmargin: '2px',\n\t\tbackgroundColor: props.badgeColor || 'rgb(187, 0, 0)'\n\t}, props.badgeStyle);\n\n\t// Add default styling and merge iconStyle Prop\n\tvar iconStyle = _extends({\n\t\tdisplay: 'inline-block',\n\t\twidth: '100%',\n\t\tfontSize: Math.round(size * iconScale) + 'px',\n\t\tcolor: props.iconColor || 'white',\n\t\ttextAlign: 'center',\n\t\ttextDecoration: 'none',\n\t\tlineHeight: size + 'px'\n\t}, props.iconStyle);\n\n\t// Create the actual badge with a much less smart component\n\treturn _react2['default'].createElement(_Badge2['default'], {\n\t\turl: props.url,\n\t\tbadgeStyle: badgeStyle,\n\t\ticonStyle: iconStyle,\n\t\ticon: icon,\n\t\tbadgeClassName: badgeClassName,\n\t\ticonClassName: props.iconClassName\n\t});\n};\n\n// Set PropTypes for component\nReactSocialBadge.propTypes = {\n\tbadgeClassName: _react2['default'].PropTypes.string,\n\tbadgeColor: _react2['default'].PropTypes.string,\n\tbadgeStyle: _react2['default'].PropTypes.object,\n\tclassName: _react2['default'].PropTypes.object,\n\ticon: _react2['default'].PropTypes.string,\n\ticonClassName: _react2['default'].PropTypes.string,\n\ticonColor: _react2['default'].PropTypes.string,\n\ticonScale: _react2['default'].PropTypes.number,\n\ticonStyle: _react2['default'].PropTypes.object,\n\tsize: _react2['default'].PropTypes.string,\n\turl: _react2['default'].PropTypes.string.isRequired\n};\n\nexports['default'] = ReactSocialBadge;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}