{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _cssSelectorTokenizer = require('css-selector-tokenizer');\n\nvar _cssSelectorTokenizer2 = _interopRequireDefault(_cssSelectorTokenizer);\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction getSingleLocalNamesForComposes(selectors) {\n  return selectors.nodes.map(function (node) {\n    if (node.type !== 'selector' || node.nodes.length !== 1) {\n      throw new Error('composition is only allowed when selector is single :local class name not in \"' + _cssSelectorTokenizer2['default'].stringify(selectors) + '\"');\n    }\n\n    node = node.nodes[0];\n\n    if (node.type !== 'nested-pseudo-class' || node.name !== 'local' || node.nodes.length !== 1) {\n      throw new Error('composition is only allowed when selector is single :local class name not in \"' + _cssSelectorTokenizer2['default'].stringify(selectors) + '\", \"' + _cssSelectorTokenizer2['default'].stringify(node) + '\" is weird');\n    }\n\n    node = node.nodes[0];\n\n    if (node.type !== 'selector' || node.nodes.length !== 1) {\n      throw new Error('composition is only allowed when selector is single :local class name not in \"' + _cssSelectorTokenizer2['default'].stringify(selectors) + '\", \"' + _cssSelectorTokenizer2['default'].stringify(node) + '\" is weird');\n    }\n\n    node = node.nodes[0];\n\n    if (node.type !== 'class') {\n      // 'id' is not possible, because you can't compose ids\n      throw new Error('composition is only allowed when selector is single :local class name not in \"' + _cssSelectorTokenizer2['default'].stringify(selectors) + '\", \"' + _cssSelectorTokenizer2['default'].stringify(node) + '\" is weird');\n    }\n\n    return node.name;\n  });\n}\n\nvar processor = _postcss2['default'].plugin('postcss-modules-scope', function (options) {\n  return function (css) {\n    var generateScopedName = options && options.generateScopedName || processor.generateScopedName;\n    var exports = {};\n\n    function exportScopedName(name) {\n      var scopedName = generateScopedName(name, css.source.input.from, css.source.input.css);\n      exports[name] = exports[name] || [];\n\n      if (exports[name].indexOf(scopedName) < 0) {\n        exports[name].push(scopedName);\n      }\n\n      return scopedName;\n    }\n\n    function localizeNode(node) {\n      var newNode = Object.create(node);\n\n      switch (node.type) {\n        case 'selector':\n          newNode.nodes = node.nodes.map(localizeNode);\n          return newNode;\n\n        case 'class':\n        case 'id':\n          var scopedName = exportScopedName(node.name);\n          newNode.name = scopedName;\n          return newNode;\n      }\n\n      throw new Error(node.type + ' (\"' + _cssSelectorTokenizer2['default'].stringify(node) + '\") is not allowed in a :local block');\n    }\n\n    function traverseNode(node) {\n      switch (node.type) {\n        case 'nested-pseudo-class':\n          if (node.name === 'local') {\n            if (node.nodes.length !== 1) {\n              throw new Error('Unexpected comma (\",\") in :local block');\n            }\n\n            return localizeNode(node.nodes[0]);\n          }\n\n        /* falls through */\n\n        case 'selectors':\n        case 'selector':\n          var newNode = Object.create(node);\n          newNode.nodes = node.nodes.map(traverseNode);\n          return newNode;\n      }\n\n      return node;\n    } // Find any :import and remember imported names\n\n\n    var importedNames = {};\n    css.walkRules(function (rule) {\n      if (/^:import\\(.+\\)$/.test(rule.selector)) {\n        rule.walkDecls(function (decl) {\n          importedNames[decl.prop] = true;\n        });\n      }\n    }); // Find any :local classes\n\n    css.walkRules(function (rule) {\n      var selector = _cssSelectorTokenizer2['default'].parse(rule.selector);\n\n      var newSelector = traverseNode(selector);\n      rule.selector = _cssSelectorTokenizer2['default'].stringify(newSelector);\n      rule.walkDecls(/composes|compose-with/, function (decl) {\n        var localNames = getSingleLocalNamesForComposes(selector);\n        var classes = decl.value.split(/\\s+/);\n        classes.forEach(function (className) {\n          var global = /^global\\(([^\\)]+)\\)$/.exec(className);\n\n          if (global) {\n            localNames.forEach(function (exportedName) {\n              exports[exportedName].push(global[1]);\n            });\n          } else if (hasOwnProperty.call(importedNames, className)) {\n            localNames.forEach(function (exportedName) {\n              exports[exportedName].push(className);\n            });\n          } else if (hasOwnProperty.call(exports, className)) {\n            localNames.forEach(function (exportedName) {\n              exports[className].forEach(function (item) {\n                exports[exportedName].push(item);\n              });\n            });\n          } else {\n            throw decl.error('referenced class name \"' + className + '\" in ' + decl.prop + ' not found');\n          }\n        });\n        decl.remove();\n      });\n      rule.walkDecls(function (decl) {\n        var tokens = decl.value.split(/(,|'[^']*'|\"[^\"]*\")/);\n        tokens = tokens.map(function (token, idx) {\n          if (idx === 0 || tokens[idx - 1] === ',') {\n            var localMatch = /^(\\s*):local\\s*\\((.+?)\\)/.exec(token);\n\n            if (localMatch) {\n              return localMatch[1] + exportScopedName(localMatch[2]) + token.substr(localMatch[0].length);\n            } else {\n              return token;\n            }\n          } else {\n            return token;\n          }\n        });\n        decl.value = tokens.join('');\n      });\n    }); // Find any :local keyframes\n\n    css.walkAtRules(function (atrule) {\n      if (/keyframes$/.test(atrule.name)) {\n        var localMatch = /^\\s*:local\\s*\\((.+?)\\)\\s*$/.exec(atrule.params);\n\n        if (localMatch) {\n          atrule.params = exportScopedName(localMatch[1]);\n        }\n      }\n    }); // If we found any :locals, insert an :export rule\n\n    var exportedNames = Object.keys(exports);\n\n    if (exportedNames.length > 0) {\n      (function () {\n        var exportRule = _postcss2['default'].rule({\n          selector: ':export'\n        });\n\n        exportedNames.forEach(function (exportedName) {\n          return exportRule.append({\n            prop: exportedName,\n            value: exports[exportedName].join(' '),\n            raws: {\n              before: '\\n  '\n            }\n          });\n        });\n        css.append(exportRule);\n      })();\n    }\n  };\n});\n\nprocessor.generateScopedName = function (exportedName, path) {\n  var sanitisedPath = path.replace(/\\.[^\\.\\/\\\\]+$/, '').replace(/[\\W_]+/g, '_').replace(/^_|_$/g, '');\n  return '_' + sanitisedPath + '__' + exportedName;\n};\n\nexports['default'] = processor;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/George/Documents/billy/node_modules/css-modules-loader-core/node_modules/postcss-modules-scope/lib/index.js"],"names":["Object","defineProperty","exports","value","_interopRequireDefault","obj","__esModule","_postcss","require","_postcss2","_cssSelectorTokenizer","_cssSelectorTokenizer2","hasOwnProperty","prototype","getSingleLocalNamesForComposes","selectors","nodes","map","node","type","length","Error","stringify","name","processor","plugin","options","css","generateScopedName","exportScopedName","scopedName","source","input","from","indexOf","push","localizeNode","newNode","create","traverseNode","importedNames","walkRules","rule","test","selector","walkDecls","decl","prop","parse","newSelector","localNames","classes","split","forEach","className","global","exec","exportedName","call","item","error","remove","tokens","token","idx","localMatch","substr","join","walkAtRules","atrule","params","exportedNames","keys","exportRule","append","raws","before","path","sanitisedPath","replace","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _cssSelectorTokenizer = require('css-selector-tokenizer');\n\nvar _cssSelectorTokenizer2 = _interopRequireDefault(_cssSelectorTokenizer);\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction getSingleLocalNamesForComposes(selectors) {\n  return selectors.nodes.map(function (node) {\n    if (node.type !== 'selector' || node.nodes.length !== 1) {\n      throw new Error('composition is only allowed when selector is single :local class name not in \"' + _cssSelectorTokenizer2['default'].stringify(selectors) + '\"');\n    }\n    node = node.nodes[0];\n    if (node.type !== 'nested-pseudo-class' || node.name !== 'local' || node.nodes.length !== 1) {\n      throw new Error('composition is only allowed when selector is single :local class name not in \"' + _cssSelectorTokenizer2['default'].stringify(selectors) + '\", \"' + _cssSelectorTokenizer2['default'].stringify(node) + '\" is weird');\n    }\n    node = node.nodes[0];\n    if (node.type !== 'selector' || node.nodes.length !== 1) {\n      throw new Error('composition is only allowed when selector is single :local class name not in \"' + _cssSelectorTokenizer2['default'].stringify(selectors) + '\", \"' + _cssSelectorTokenizer2['default'].stringify(node) + '\" is weird');\n    }\n    node = node.nodes[0];\n    if (node.type !== 'class') {\n      // 'id' is not possible, because you can't compose ids\n      throw new Error('composition is only allowed when selector is single :local class name not in \"' + _cssSelectorTokenizer2['default'].stringify(selectors) + '\", \"' + _cssSelectorTokenizer2['default'].stringify(node) + '\" is weird');\n    }\n    return node.name;\n  });\n}\n\nvar processor = _postcss2['default'].plugin('postcss-modules-scope', function (options) {\n  return function (css) {\n    var generateScopedName = options && options.generateScopedName || processor.generateScopedName;\n\n    var exports = {};\n\n    function exportScopedName(name) {\n      var scopedName = generateScopedName(name, css.source.input.from, css.source.input.css);\n      exports[name] = exports[name] || [];\n      if (exports[name].indexOf(scopedName) < 0) {\n        exports[name].push(scopedName);\n      }\n      return scopedName;\n    }\n\n    function localizeNode(node) {\n      var newNode = Object.create(node);\n      switch (node.type) {\n        case 'selector':\n          newNode.nodes = node.nodes.map(localizeNode);\n          return newNode;\n        case 'class':\n        case 'id':\n          var scopedName = exportScopedName(node.name);\n          newNode.name = scopedName;\n          return newNode;\n      }\n      throw new Error(node.type + ' (\"' + _cssSelectorTokenizer2['default'].stringify(node) + '\") is not allowed in a :local block');\n    }\n\n    function traverseNode(node) {\n      switch (node.type) {\n        case 'nested-pseudo-class':\n          if (node.name === 'local') {\n            if (node.nodes.length !== 1) {\n              throw new Error('Unexpected comma (\",\") in :local block');\n            }\n            return localizeNode(node.nodes[0]);\n          }\n        /* falls through */\n        case 'selectors':\n        case 'selector':\n          var newNode = Object.create(node);\n          newNode.nodes = node.nodes.map(traverseNode);\n          return newNode;\n      }\n      return node;\n    }\n\n    // Find any :import and remember imported names\n    var importedNames = {};\n    css.walkRules(function (rule) {\n      if (/^:import\\(.+\\)$/.test(rule.selector)) {\n        rule.walkDecls(function (decl) {\n          importedNames[decl.prop] = true;\n        });\n      }\n    });\n\n    // Find any :local classes\n    css.walkRules(function (rule) {\n      var selector = _cssSelectorTokenizer2['default'].parse(rule.selector);\n      var newSelector = traverseNode(selector);\n      rule.selector = _cssSelectorTokenizer2['default'].stringify(newSelector);\n      rule.walkDecls(/composes|compose-with/, function (decl) {\n        var localNames = getSingleLocalNamesForComposes(selector);\n        var classes = decl.value.split(/\\s+/);\n        classes.forEach(function (className) {\n          var global = /^global\\(([^\\)]+)\\)$/.exec(className);\n          if (global) {\n            localNames.forEach(function (exportedName) {\n              exports[exportedName].push(global[1]);\n            });\n          } else if (hasOwnProperty.call(importedNames, className)) {\n            localNames.forEach(function (exportedName) {\n              exports[exportedName].push(className);\n            });\n          } else if (hasOwnProperty.call(exports, className)) {\n            localNames.forEach(function (exportedName) {\n              exports[className].forEach(function (item) {\n                exports[exportedName].push(item);\n              });\n            });\n          } else {\n            throw decl.error('referenced class name \"' + className + '\" in ' + decl.prop + ' not found');\n          }\n        });\n        decl.remove();\n      });\n\n      rule.walkDecls(function (decl) {\n        var tokens = decl.value.split(/(,|'[^']*'|\"[^\"]*\")/);\n        tokens = tokens.map(function (token, idx) {\n          if (idx === 0 || tokens[idx - 1] === ',') {\n            var localMatch = /^(\\s*):local\\s*\\((.+?)\\)/.exec(token);\n            if (localMatch) {\n              return localMatch[1] + exportScopedName(localMatch[2]) + token.substr(localMatch[0].length);\n            } else {\n              return token;\n            }\n          } else {\n            return token;\n          }\n        });\n        decl.value = tokens.join('');\n      });\n    });\n\n    // Find any :local keyframes\n    css.walkAtRules(function (atrule) {\n      if (/keyframes$/.test(atrule.name)) {\n        var localMatch = /^\\s*:local\\s*\\((.+?)\\)\\s*$/.exec(atrule.params);\n        if (localMatch) {\n          atrule.params = exportScopedName(localMatch[1]);\n        }\n      }\n    });\n\n    // If we found any :locals, insert an :export rule\n    var exportedNames = Object.keys(exports);\n    if (exportedNames.length > 0) {\n      (function () {\n        var exportRule = _postcss2['default'].rule({ selector: ':export' });\n        exportedNames.forEach(function (exportedName) {\n          return exportRule.append({\n            prop: exportedName,\n            value: exports[exportedName].join(' '),\n            raws: { before: '\\n  ' }\n          });\n        });\n        css.append(exportRule);\n      })();\n    }\n  };\n});\n\nprocessor.generateScopedName = function (exportedName, path) {\n  var sanitisedPath = path.replace(/\\.[^\\.\\/\\\\]+$/, '').replace(/[\\W_]+/g, '_').replace(/^_|_$/g, '');\n  return '_' + sanitisedPath + '__' + exportedName;\n};\n\nexports['default'] = processor;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}