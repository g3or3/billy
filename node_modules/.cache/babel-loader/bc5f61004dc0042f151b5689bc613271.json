{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash.assign');\n\nvar cssRE = /\\.css$/i;\nvar RegExpRE = /^\\/(.*)\\/(.*)$/;\n\nfunction normalize(opts) {\n  opts = assign({}, opts);\n\n  if (typeof opts['auto-inject'] === 'undefined') {\n    opts['auto-inject'] = true;\n  }\n\n  if (opts['no-auto-inject']) {\n    opts['auto-inject'] = false;\n    delete opts['no-auto-inject'];\n  }\n\n  if (opts.test) {\n    if (typeof opts.test === 'string') {\n      opts.test = stringToRegExp(opts.test);\n    }\n  } else {\n    opts.test = cssRE;\n  }\n\n  return opts;\n}\n\nfunction skipIt(fileName, opts) {\n  if (typeof opts.test === 'function') {\n    if (!opts.test(fileName)) {\n      return true;\n    }\n  } else if (opts.test instanceof RegExp) {\n    if (!opts.test.test(fileName)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction stringToRegExp(str) {\n  var match = RegExpRE.exec(str);\n  if (!match) return;\n  var re = match[1];\n  var flags = match[2];\n  return new RegExp(re, flags);\n}\n\nexports.normalize = normalize;\nexports.skipIt = skipIt;\nexports.stringToRegExp = stringToRegExp;","map":{"version":3,"sources":["/Users/George/Documents/billy/node_modules/cssify/lib/options.js"],"names":["assign","require","cssRE","RegExpRE","normalize","opts","test","stringToRegExp","skipIt","fileName","RegExp","str","match","exec","re","flags","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIC,KAAK,GAAG,SAAZ;AACA,IAAIC,QAAQ,GAAG,gBAAf;;AAEA,SAASC,SAAT,CAAoBC,IAApB,EAA0B;AACxBA,EAAAA,IAAI,GAAGL,MAAM,CAAC,EAAD,EAAKK,IAAL,CAAb;;AAEA,MAAI,OAAOA,IAAI,CAAC,aAAD,CAAX,KAA+B,WAAnC,EAAgD;AAC9CA,IAAAA,IAAI,CAAC,aAAD,CAAJ,GAAsB,IAAtB;AACD;;AAED,MAAIA,IAAI,CAAC,gBAAD,CAAR,EAA4B;AAC1BA,IAAAA,IAAI,CAAC,aAAD,CAAJ,GAAsB,KAAtB;AACA,WAAOA,IAAI,CAAC,gBAAD,CAAX;AACD;;AAED,MAAIA,IAAI,CAACC,IAAT,EAAe;AACb,QAAI,OAAOD,IAAI,CAACC,IAAZ,KAAqB,QAAzB,EAAmC;AACjCD,MAAAA,IAAI,CAACC,IAAL,GAAYC,cAAc,CAACF,IAAI,CAACC,IAAN,CAA1B;AACD;AACF,GAJD,MAIO;AACLD,IAAAA,IAAI,CAACC,IAAL,GAAYJ,KAAZ;AACD;;AAED,SAAOG,IAAP;AACD;;AAED,SAASG,MAAT,CAAiBC,QAAjB,EAA2BJ,IAA3B,EAAiC;AAC/B,MAAI,OAAOA,IAAI,CAACC,IAAZ,KAAqB,UAAzB,EAAqC;AACnC,QAAI,CAACD,IAAI,CAACC,IAAL,CAAUG,QAAV,CAAL,EAA0B;AACxB,aAAO,IAAP;AACD;AACF,GAJD,MAIO,IAAIJ,IAAI,CAACC,IAAL,YAAqBI,MAAzB,EAAiC;AACtC,QAAI,CAACL,IAAI,CAACC,IAAL,CAAUA,IAAV,CAAeG,QAAf,CAAL,EAA+B;AAC7B,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD;;AAED,SAASF,cAAT,CAAyBI,GAAzB,EAA8B;AAC5B,MAAIC,KAAK,GAAGT,QAAQ,CAACU,IAAT,CAAcF,GAAd,CAAZ;AACA,MAAI,CAACC,KAAL,EAAY;AAEZ,MAAIE,EAAE,GAAGF,KAAK,CAAC,CAAD,CAAd;AACA,MAAIG,KAAK,GAAGH,KAAK,CAAC,CAAD,CAAjB;AACA,SAAO,IAAIF,MAAJ,CAAWI,EAAX,EAAeC,KAAf,CAAP;AACD;;AAEDC,OAAO,CAACZ,SAAR,GAAoBA,SAApB;AACAY,OAAO,CAACR,MAAR,GAAiBA,MAAjB;AACAQ,OAAO,CAACT,cAAR,GAAyBA,cAAzB","sourcesContent":["'use strict'\n\nvar assign = require('lodash.assign')\nvar cssRE = /\\.css$/i\nvar RegExpRE = /^\\/(.*)\\/(.*)$/\n\nfunction normalize (opts) {\n  opts = assign({}, opts)\n\n  if (typeof opts['auto-inject'] === 'undefined') {\n    opts['auto-inject'] = true\n  }\n\n  if (opts['no-auto-inject']) {\n    opts['auto-inject'] = false\n    delete opts['no-auto-inject']\n  }\n\n  if (opts.test) {\n    if (typeof opts.test === 'string') {\n      opts.test = stringToRegExp(opts.test)\n    }\n  } else {\n    opts.test = cssRE\n  }\n\n  return opts\n}\n\nfunction skipIt (fileName, opts) {\n  if (typeof opts.test === 'function') {\n    if (!opts.test(fileName)) {\n      return true\n    }\n  } else if (opts.test instanceof RegExp) {\n    if (!opts.test.test(fileName)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction stringToRegExp (str) {\n  var match = RegExpRE.exec(str)\n  if (!match) return\n\n  var re = match[1]\n  var flags = match[2]\n  return new RegExp(re, flags)\n}\n\nexports.normalize = normalize\nexports.skipIt = skipIt\nexports.stringToRegExp = stringToRegExp\n"]},"metadata":{},"sourceType":"script"}