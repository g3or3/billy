{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar _icssReplaceSymbols = require('icss-replace-symbols');\n\nvar _icssReplaceSymbols2 = _interopRequireDefault(_icssReplaceSymbols);\n\nvar importRegexp = /^:import\\((.+)\\)$/;\n\nvar Parser = function () {\n  function Parser(pathFetcher, trace) {\n    _classCallCheck(this, Parser);\n\n    this.pathFetcher = pathFetcher;\n    this.plugin = this.plugin.bind(this);\n    this.exportTokens = {};\n    this.translations = {};\n    this.trace = trace;\n  }\n\n  _createClass(Parser, [{\n    key: \"plugin\",\n    value: function plugin(css, result) {\n      var _this = this;\n\n      return Promise.all(this.fetchAllImports(css)).then(function (_) {\n        return _this.linkImportedSymbols(css);\n      }).then(function (_) {\n        return _this.extractExports(css);\n      });\n    }\n  }, {\n    key: \"fetchAllImports\",\n    value: function fetchAllImports(css) {\n      var _this2 = this;\n\n      var imports = [];\n      css.each(function (node) {\n        if (node.type == \"rule\" && node.selector.match(importRegexp)) {\n          imports.push(_this2.fetchImport(node, css.source.input.from, imports.length));\n        }\n      });\n      return imports;\n    }\n  }, {\n    key: \"linkImportedSymbols\",\n    value: function linkImportedSymbols(css) {\n      (0, _icssReplaceSymbols2[\"default\"])(css, this.translations);\n    }\n  }, {\n    key: \"extractExports\",\n    value: function extractExports(css) {\n      var _this3 = this;\n\n      css.each(function (node) {\n        if (node.type == \"rule\" && node.selector == \":export\") _this3.handleExport(node);\n      });\n    }\n  }, {\n    key: \"handleExport\",\n    value: function handleExport(exportNode) {\n      var _this4 = this;\n\n      exportNode.each(function (decl) {\n        if (decl.type == 'decl') {\n          Object.keys(_this4.translations).forEach(function (translation) {\n            decl.value = decl.value.replace(translation, _this4.translations[translation]);\n          });\n          _this4.exportTokens[decl.prop] = decl.value;\n        }\n      });\n      exportNode.remove();\n    }\n  }, {\n    key: \"fetchImport\",\n    value: function fetchImport(importNode, relativeTo, depNr) {\n      var _this5 = this;\n\n      var file = importNode.selector.match(importRegexp)[1],\n          depTrace = this.trace + String.fromCharCode(depNr);\n      return this.pathFetcher(file, relativeTo, depTrace).then(function (exports) {\n        importNode.each(function (decl) {\n          if (decl.type == 'decl') {\n            _this5.translations[decl.prop] = exports[decl.value];\n          }\n        });\n        importNode.remove();\n      }, function (err) {\n        return console.log(err);\n      });\n    }\n  }]);\n\n  return Parser;\n}();\n\nexports[\"default\"] = Parser;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["/Users/George/Documents/billy/node_modules/css-modules-loader-core/lib/parser.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_interopRequireDefault","obj","__esModule","_classCallCheck","instance","TypeError","_icssReplaceSymbols","require","_icssReplaceSymbols2","importRegexp","Parser","pathFetcher","trace","plugin","bind","exportTokens","translations","css","result","_this","Promise","all","fetchAllImports","then","_","linkImportedSymbols","extractExports","_this2","imports","each","node","type","selector","match","push","fetchImport","source","input","from","_this3","handleExport","exportNode","_this4","decl","keys","forEach","translation","replace","prop","remove","importNode","relativeTo","depNr","_this5","file","depTrace","String","fromCharCode","err","console","log","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,YAAY,GAAI,YAAY;AAAE,WAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,UAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,MAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,MAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,UAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4Bb,MAAAA,MAAM,CAACC,cAAP,CAAsBK,MAAtB,EAA8BI,UAAU,CAACI,GAAzC,EAA8CJ,UAA9C;AAA4D;AAAE;;AAAC,SAAO,UAAUK,WAAV,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgD;AAAE,QAAID,UAAJ,EAAgBX,gBAAgB,CAACU,WAAW,CAACG,SAAb,EAAwBF,UAAxB,CAAhB;AAAqD,QAAIC,WAAJ,EAAiBZ,gBAAgB,CAACU,WAAD,EAAcE,WAAd,CAAhB;AAA4C,WAAOF,WAAP;AAAqB,GAAhN;AAAmN,CAA/hB,EAAnB;;AAEA,SAASI,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,SAASE,eAAT,CAAyBC,QAAzB,EAAmCR,WAAnC,EAAgD;AAAE,MAAI,EAAEQ,QAAQ,YAAYR,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIS,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,mBAAmB,GAAGC,OAAO,CAAC,sBAAD,CAAjC;;AAEA,IAAIC,oBAAoB,GAAGR,sBAAsB,CAACM,mBAAD,CAAjD;;AAEA,IAAIG,YAAY,GAAG,mBAAnB;;AAEA,IAAIC,MAAM,GAAI,YAAY;AACxB,WAASA,MAAT,CAAgBC,WAAhB,EAA6BC,KAA7B,EAAoC;AAClCT,IAAAA,eAAe,CAAC,IAAD,EAAOO,MAAP,CAAf;;AAEA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKJ,KAAL,GAAaA,KAAb;AACD;;AAED3B,EAAAA,YAAY,CAACyB,MAAD,EAAS,CAAC;AACpBf,IAAAA,GAAG,EAAE,QADe;AAEpBX,IAAAA,KAAK,EAAE,SAAS6B,MAAT,CAAgBI,GAAhB,EAAqBC,MAArB,EAA6B;AAClC,UAAIC,KAAK,GAAG,IAAZ;;AAEA,aAAOC,OAAO,CAACC,GAAR,CAAY,KAAKC,eAAL,CAAqBL,GAArB,CAAZ,EAAuCM,IAAvC,CAA4C,UAAUC,CAAV,EAAa;AAC9D,eAAOL,KAAK,CAACM,mBAAN,CAA0BR,GAA1B,CAAP;AACD,OAFM,EAEJM,IAFI,CAEC,UAAUC,CAAV,EAAa;AACnB,eAAOL,KAAK,CAACO,cAAN,CAAqBT,GAArB,CAAP;AACD,OAJM,CAAP;AAKD;AAVmB,GAAD,EAWlB;AACDtB,IAAAA,GAAG,EAAE,iBADJ;AAEDX,IAAAA,KAAK,EAAE,SAASsC,eAAT,CAAyBL,GAAzB,EAA8B;AACnC,UAAIU,MAAM,GAAG,IAAb;;AAEA,UAAIC,OAAO,GAAG,EAAd;AACAX,MAAAA,GAAG,CAACY,IAAJ,CAAS,UAAUC,IAAV,EAAgB;AACvB,YAAIA,IAAI,CAACC,IAAL,IAAa,MAAb,IAAuBD,IAAI,CAACE,QAAL,CAAcC,KAAd,CAAoBxB,YAApB,CAA3B,EAA8D;AAC5DmB,UAAAA,OAAO,CAACM,IAAR,CAAaP,MAAM,CAACQ,WAAP,CAAmBL,IAAnB,EAAyBb,GAAG,CAACmB,MAAJ,CAAWC,KAAX,CAAiBC,IAA1C,EAAgDV,OAAO,CAACtC,MAAxD,CAAb;AACD;AACF,OAJD;AAKA,aAAOsC,OAAP;AACD;AAZA,GAXkB,EAwBlB;AACDjC,IAAAA,GAAG,EAAE,qBADJ;AAEDX,IAAAA,KAAK,EAAE,SAASyC,mBAAT,CAA6BR,GAA7B,EAAkC;AACvC,OAAC,GAAGT,oBAAoB,CAAC,SAAD,CAAxB,EAAqCS,GAArC,EAA0C,KAAKD,YAA/C;AACD;AAJA,GAxBkB,EA6BlB;AACDrB,IAAAA,GAAG,EAAE,gBADJ;AAEDX,IAAAA,KAAK,EAAE,SAAS0C,cAAT,CAAwBT,GAAxB,EAA6B;AAClC,UAAIsB,MAAM,GAAG,IAAb;;AAEAtB,MAAAA,GAAG,CAACY,IAAJ,CAAS,UAAUC,IAAV,EAAgB;AACvB,YAAIA,IAAI,CAACC,IAAL,IAAa,MAAb,IAAuBD,IAAI,CAACE,QAAL,IAAiB,SAA5C,EAAuDO,MAAM,CAACC,YAAP,CAAoBV,IAApB;AACxD,OAFD;AAGD;AARA,GA7BkB,EAsClB;AACDnC,IAAAA,GAAG,EAAE,cADJ;AAEDX,IAAAA,KAAK,EAAE,SAASwD,YAAT,CAAsBC,UAAtB,EAAkC;AACvC,UAAIC,MAAM,GAAG,IAAb;;AAEAD,MAAAA,UAAU,CAACZ,IAAX,CAAgB,UAAUc,IAAV,EAAgB;AAC9B,YAAIA,IAAI,CAACZ,IAAL,IAAa,MAAjB,EAAyB;AACvBlD,UAAAA,MAAM,CAAC+D,IAAP,CAAYF,MAAM,CAAC1B,YAAnB,EAAiC6B,OAAjC,CAAyC,UAAUC,WAAV,EAAuB;AAC9DH,YAAAA,IAAI,CAAC3D,KAAL,GAAa2D,IAAI,CAAC3D,KAAL,CAAW+D,OAAX,CAAmBD,WAAnB,EAAgCJ,MAAM,CAAC1B,YAAP,CAAoB8B,WAApB,CAAhC,CAAb;AACD,WAFD;AAGAJ,UAAAA,MAAM,CAAC3B,YAAP,CAAoB4B,IAAI,CAACK,IAAzB,IAAiCL,IAAI,CAAC3D,KAAtC;AACD;AACF,OAPD;AAQAyD,MAAAA,UAAU,CAACQ,MAAX;AACD;AAdA,GAtCkB,EAqDlB;AACDtD,IAAAA,GAAG,EAAE,aADJ;AAEDX,IAAAA,KAAK,EAAE,SAASmD,WAAT,CAAqBe,UAArB,EAAiCC,UAAjC,EAA6CC,KAA7C,EAAoD;AACzD,UAAIC,MAAM,GAAG,IAAb;;AAEA,UAAIC,IAAI,GAAGJ,UAAU,CAAClB,QAAX,CAAoBC,KAApB,CAA0BxB,YAA1B,EAAwC,CAAxC,CAAX;AAAA,UACI8C,QAAQ,GAAG,KAAK3C,KAAL,GAAa4C,MAAM,CAACC,YAAP,CAAoBL,KAApB,CAD5B;AAEA,aAAO,KAAKzC,WAAL,CAAiB2C,IAAjB,EAAuBH,UAAvB,EAAmCI,QAAnC,EAA6ChC,IAA7C,CAAkD,UAAUxC,OAAV,EAAmB;AAC1EmE,QAAAA,UAAU,CAACrB,IAAX,CAAgB,UAAUc,IAAV,EAAgB;AAC9B,cAAIA,IAAI,CAACZ,IAAL,IAAa,MAAjB,EAAyB;AACvBsB,YAAAA,MAAM,CAACrC,YAAP,CAAoB2B,IAAI,CAACK,IAAzB,IAAiCjE,OAAO,CAAC4D,IAAI,CAAC3D,KAAN,CAAxC;AACD;AACF,SAJD;AAKAkE,QAAAA,UAAU,CAACD,MAAX;AACD,OAPM,EAOJ,UAAUS,GAAV,EAAe;AAChB,eAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACD,OATM,CAAP;AAUD;AAjBA,GArDkB,CAAT,CAAZ;;AAyEA,SAAOhD,MAAP;AACD,CArFY,EAAb;;AAuFA3B,OAAO,CAAC,SAAD,CAAP,GAAqB2B,MAArB;AACAmD,MAAM,CAAC9E,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _icssReplaceSymbols = require('icss-replace-symbols');\n\nvar _icssReplaceSymbols2 = _interopRequireDefault(_icssReplaceSymbols);\n\nvar importRegexp = /^:import\\((.+)\\)$/;\n\nvar Parser = (function () {\n  function Parser(pathFetcher, trace) {\n    _classCallCheck(this, Parser);\n\n    this.pathFetcher = pathFetcher;\n    this.plugin = this.plugin.bind(this);\n    this.exportTokens = {};\n    this.translations = {};\n    this.trace = trace;\n  }\n\n  _createClass(Parser, [{\n    key: \"plugin\",\n    value: function plugin(css, result) {\n      var _this = this;\n\n      return Promise.all(this.fetchAllImports(css)).then(function (_) {\n        return _this.linkImportedSymbols(css);\n      }).then(function (_) {\n        return _this.extractExports(css);\n      });\n    }\n  }, {\n    key: \"fetchAllImports\",\n    value: function fetchAllImports(css) {\n      var _this2 = this;\n\n      var imports = [];\n      css.each(function (node) {\n        if (node.type == \"rule\" && node.selector.match(importRegexp)) {\n          imports.push(_this2.fetchImport(node, css.source.input.from, imports.length));\n        }\n      });\n      return imports;\n    }\n  }, {\n    key: \"linkImportedSymbols\",\n    value: function linkImportedSymbols(css) {\n      (0, _icssReplaceSymbols2[\"default\"])(css, this.translations);\n    }\n  }, {\n    key: \"extractExports\",\n    value: function extractExports(css) {\n      var _this3 = this;\n\n      css.each(function (node) {\n        if (node.type == \"rule\" && node.selector == \":export\") _this3.handleExport(node);\n      });\n    }\n  }, {\n    key: \"handleExport\",\n    value: function handleExport(exportNode) {\n      var _this4 = this;\n\n      exportNode.each(function (decl) {\n        if (decl.type == 'decl') {\n          Object.keys(_this4.translations).forEach(function (translation) {\n            decl.value = decl.value.replace(translation, _this4.translations[translation]);\n          });\n          _this4.exportTokens[decl.prop] = decl.value;\n        }\n      });\n      exportNode.remove();\n    }\n  }, {\n    key: \"fetchImport\",\n    value: function fetchImport(importNode, relativeTo, depNr) {\n      var _this5 = this;\n\n      var file = importNode.selector.match(importRegexp)[1],\n          depTrace = this.trace + String.fromCharCode(depNr);\n      return this.pathFetcher(file, relativeTo, depTrace).then(function (exports) {\n        importNode.each(function (decl) {\n          if (decl.type == 'decl') {\n            _this5.translations[decl.prop] = exports[decl.value];\n          }\n        });\n        importNode.remove();\n      }, function (err) {\n        return console.log(err);\n      });\n    }\n  }]);\n\n  return Parser;\n})();\n\nexports[\"default\"] = Parser;\nmodule.exports = exports[\"default\"];"]},"metadata":{},"sourceType":"script"}